{"version":3,"sources":["data/posts.js","redux/reducer.js","Components/Title.js","Components/Photo.js","Components/PhotoWall.js","Components/AddPhoto.js","database/config.js","redux/actions.js","Components/Comments.js","Components/Single.js","Components/Main.js","Components/App.js","index.js"],"names":["postsData","rootReducer","combineReducers","posts","state","action","type","slice","index","post","comments","postId","comment","Title","props","title","Photo","className","to","id","src","imageLink","alt","description","onClick","startRemovingPost","history","push","length","PhotoWall","sort","x","y","map","key","AddPhoto","event","preventDefault","target","elements","link","value","Number","Date","this","startAddingPost","onHistory","onSubmit","handleSubmit","bind","name","placeholder","Component","firebase","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","database","dispatch","ref","update","then","addPost","catch","error","console","log","startLoadingPost","once","snapshot","forEach","childSnapshot","val","loadPosts","remove","removePost","startAddingComment","addComment","startLoadingComments","Object","values","loadComments","Comments","hidden","Single","match","params","find","findIndex","loading","Main","setState","style","textDecoration","path","exact","render","withRouter","connect","bindActionCreators","actions","App","store","createStore","compose","applyMiddleware","thunk","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.903fe98e.chunk.js","sourcesContent":["export const postsData = [];\r\n","import { postsData } from '../data/posts';\r\nimport { combineReducers } from 'redux';\r\nfunction comments(state = {}, action) {\r\n  switch (action.type) {\r\n    case 'ADD_COMMENT':\r\n      if (!state[action.postId]) {\r\n        return { ...state, [action.postId]: [action.comment] };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [action.postId]: [...state[action.postId], action.comment],\r\n        };\r\n      }\r\n    case 'LOAD_COMMENTS':\r\n      return action.comments;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nfunction posts(state = postsData, action) {\r\n  switch (action.type) {\r\n    case 'REMOVE_POST':\r\n      return [\r\n        ...state.slice(0, action.index),\r\n        ...state.slice(action.index + 1),\r\n      ];\r\n    case 'ADD_POST':\r\n      return [...state, action.post];\r\n    case 'LOAD_POSTS':\r\n      return action.posts;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\nconst rootReducer = combineReducers({ posts, comments });\r\nexport default rootReducer;\r\n","import React from 'react';\r\n\r\nfunction Title(props) {\r\n  return <h1>{props.title}</h1>;\r\n}\r\n\r\nexport default Title;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction Photo(props) {\r\n  const post = props.post;\r\n  return (\r\n    <figure className='figure'>\r\n      <Link to={`/single/${post.id}`}>\r\n        <img className='photo' src={post.imageLink} alt={post.description} />\r\n      </Link>\r\n      <figcaption>\r\n        <p>{post.description}</p>\r\n      </figcaption>\r\n      <div className='button-container'>\r\n        <button\r\n          onClick={() => {\r\n            props.startRemovingPost(props.index, post.id);\r\n            props.history.push('/');\r\n          }}>\r\n          Remove\r\n        </button>\r\n        <Link to={`/single/${post.id}`} className='button'>\r\n          <div className='comment-count '>\r\n            <div className='speech-bubble'></div>\r\n            {props.comments[post.id] ? props.comments[post.id].length : 0}\r\n          </div>\r\n        </Link>\r\n      </div>\r\n    </figure>\r\n  );\r\n}\r\n\r\nPhoto.propTypes = {\r\n  post: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default Photo;\r\n","import React from 'react';\r\nimport Photo from './Photo';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n//anchor tag, href attribute\r\nfunction PhotoWall(props) {\r\n  return (\r\n    <div>\r\n      <Link className='addIcon' to='/AddPhoto'>\r\n        {' '}\r\n      </Link>\r\n      <div className='photo-grid'>\r\n        {props.posts\r\n          .sort(function (x, y) {\r\n            return y.id - x.id;\r\n          })\r\n          .map((post, index) => (\r\n            <Photo key={index} post={post} {...props} index={index} />\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\nPhotoWall.propTypes = {\r\n  posts: PropTypes.array.isRequired,\r\n};\r\nexport default PhotoWall;\r\n","import React, { Component } from 'react';\r\n\r\nclass AddPhoto extends Component {\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const imageLink = event.target.elements.link.value;\r\n    const description = event.target.elements.description.value;\r\n    const post = {\r\n      id: Number(new Date()),\r\n      imageLink,\r\n      description,\r\n    };\r\n\r\n    if (description && imageLink) {\r\n      this.props.startAddingPost(post);\r\n\r\n      this.props.onHistory.push('/');\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <div className='form'>\r\n          <form onSubmit={this.handleSubmit.bind(this)}>\r\n            <input type='text' name='link' placeholder='Link' />\r\n            <input type='text' name='description' placeholder='Description' />\r\n            <button>Post</button>\r\n          </form>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddPhoto;\r\n","import * as firebase from 'firebase';\r\n\r\nvar firebaseConfig = {\r\n  apiKey: 'AIzaSyC_Uq2LAMqbRlQm6Jb1hwTnq2XNft9IC6s',\r\n  authDomain: 'photowall-d9668.firebaseapp.com',\r\n  databaseURL: 'https://photowall-d9668.firebaseio.com',\r\n  projectId: 'photowall-d9668',\r\n  storageBucket: 'photowall-d9668.appspot.com',\r\n  messagingSenderId: '1019499229607',\r\n  appId: '1:1019499229607:web:1db2e147ad6551d10f0682',\r\n  measurementId: 'G-1NBF1C996T',\r\n};\r\n\r\nfirebase.initializeApp(firebaseConfig);\r\n\r\nconst database = firebase.database();\r\n\r\nexport { database };\r\n","import { database } from '../database/config';\r\nexport function startAddingPost(post) {\r\n  return (dispatch) => {\r\n    return database\r\n      .ref('posts')\r\n      .update({ [post.id]: post })\r\n      .then(() => {\r\n        dispatch(addPost(post));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n}\r\nexport function startLoadingPost() {\r\n  return (dispatch) => {\r\n    return database\r\n      .ref('posts')\r\n      .once('value')\r\n      .then((snapshot) => {\r\n        let posts = [];\r\n        snapshot.forEach((childSnapshot) => {\r\n          posts.push(childSnapshot.val());\r\n        });\r\n        dispatch(loadPosts(posts));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n}\r\nexport function startRemovingPost(index, id) {\r\n  return (dispatch) => {\r\n    return database\r\n      .ref(`posts/${id}`)\r\n      .remove()\r\n      .then(() => {\r\n        dispatch(removePost(index));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n}\r\nexport function startAddingComment(comment, postId) {\r\n  return (dispatch) => {\r\n    return database\r\n      .ref('comments/' + postId)\r\n      .push(comment)\r\n      .then(() => {\r\n        dispatch(addComment(comment, postId));\r\n      })\r\n      .catch((error) => {\r\n        console.log(error);\r\n      });\r\n  };\r\n}\r\nexport function startLoadingComments() {\r\n  return (dispatch) => {\r\n    return database\r\n      .ref('comments')\r\n      .once('value')\r\n      .then((snapshot) => {\r\n        let comments = {};\r\n        snapshot.forEach((childSnapshot) => {\r\n          comments[childSnapshot.key] = Object.values(childSnapshot.val());\r\n        });\r\n        dispatch(loadComments(comments));\r\n      });\r\n  };\r\n}\r\nexport function loadComments(comments) {\r\n  return {\r\n    type: 'LOAD_COMMENTS',\r\n    comments,\r\n  };\r\n}\r\nexport function removePost(index) {\r\n  return {\r\n    type: 'REMOVE_POST',\r\n    index,\r\n  };\r\n}\r\nexport function addPost(post) {\r\n  return {\r\n    type: 'ADD_POST',\r\n    post,\r\n  };\r\n}\r\nexport function addComment(comment, postId) {\r\n  return {\r\n    type: 'ADD_COMMENT',\r\n    comment,\r\n    postId,\r\n  };\r\n}\r\nexport function loadPosts(posts) {\r\n  return {\r\n    type: 'LOAD_POSTS',\r\n    posts,\r\n  };\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nclass Comments extends Component {\r\n  handleSubmit(event) {\r\n    event.preventDefault();\r\n    const comment = event.target.elements.comment.value;\r\n    this.props.startAddingComment(comment, this.props.id);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='comment'>\r\n        {this.props.comments &&\r\n          this.props.comments.map((comment, index) => {\r\n            return <p key={index}>{comment}</p>;\r\n          })}\r\n\r\n        <form className='comment-form' onSubmit={this.handleSubmit.bind(this)}>\r\n          <input type='text' placeholder='comment' name='comment' />\r\n          <input type='submit' hidden />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Comments;\r\n","import React, { Component } from 'react';\r\nimport Photo from './Photo';\r\nimport Comments from './Comments';\r\nclass Single extends Component {\r\n  render() {\r\n    const { match, posts } = this.props;\r\n    const id = Number(match.params.id);\r\n    const post = posts.find((post) => post.id === id);\r\n    const comments = this.props.comments[match.params.id] || [];\r\n    const index = this.props.posts.findIndex((post) => post.id === id);\r\n    if (this.props.loading === true) {\r\n      return <div className='loader'> ...loading </div>;\r\n    } else if (post) {\r\n      return (\r\n        <div className='single-photo'>\r\n          <Photo post={post} {...this.props} index={index} />\r\n          <Comments\r\n            startAddingComment={this.props.startAddingComment}\r\n            comments={comments}\r\n            id={id}\r\n          />\r\n        </div>\r\n      );\r\n    } else {\r\n      return <h1> ...no post found </h1>;\r\n    }\r\n  }\r\n}\r\nexport default Single;\r\n","import React, { Component } from 'react';\r\nimport Title from './Title';\r\nimport PhotoWall from './PhotoWall';\r\nimport AddPhoto from './AddPhoto';\r\nimport { Route, Link } from 'react-router-dom';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../redux/actions';\r\nimport { bindActionCreators } from 'redux';\r\nimport { withRouter } from 'react-router';\r\nimport Single from '../Components/Single';\r\n\r\nclass Main extends Component {\r\n  state = { loading: true };\r\n  componentDidMount() {\r\n    this.props.startLoadingPost().then(() => {\r\n      this.setState({ loading: false });\r\n    });\r\n    this.props.startLoadingComments();\r\n  }\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Link to='/' style={{ textDecoration: 'none' }} to='/'>\r\n          <Title title={'PhotoWall'} />\r\n        </Link>\r\n\r\n        <Route\r\n          path='/'\r\n          exact\r\n          render={() => (\r\n            <div>\r\n              <PhotoWall {...this.props} />\r\n            </div>\r\n          )}\r\n        />\r\n        <Route\r\n          path='/AddPhoto'\r\n          exact\r\n          render={({ history }) => (\r\n            <AddPhoto {...this.props} onHistory={history} />\r\n          )}\r\n        />\r\n        <Route\r\n          path='/single/:id'\r\n          render={(params) => (\r\n            <Single {...this.props} loading={this.state.loading} {...params} />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state.posts,\r\n    comments: state.comments,\r\n  };\r\n}\r\nfunction mapDispatchToProps(dispatch) {\r\n  return bindActionCreators(actions, dispatch);\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));\r\n","import Main from './Main';\r\nimport { connect } from 'react-redux';\r\n\r\nfunction mapStateToProps(state) {\r\n  return {\r\n    posts: state,\r\n  };\r\n}\r\n\r\nconst App = connect(mapStateToProps)(Main);\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/stylesheet.css';\nimport { BrowserRouter } from 'react-router-dom';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './redux/reducer';\nimport { Provider } from 'react-redux';\nimport App from './Components/App';\nimport thunk from 'redux-thunk';\n\nconst store = createStore(\n  rootReducer,\n  compose(\n    applyMiddleware(thunk),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\nReactDOM.render(\n  <Provider store={store}>\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\n      <App />\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}